@page
@using Group5_DBApp.Models
@using Group5_DBApp.Pages
@model Group5_DBApp.Pages.StaffDashboardModel
@{
    ViewData["Title"] = "Staff Account Info";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Online Shopping Application</title>
    <link rel="stylesheet" href="styles.css">
    <script src="~/wwwroot/js/site.js"></script>
</head>
<h1>Welcome to the Staff Dashboard</h1>
<body>
    <main>
        <main>
        <section class="search-products">
            <!-- Search Bar -->
            <form action="#" method="GET">
                <input type="text" name="search" id="searchInput" placeholder="Search products...">
            </form>
        </section>
        <section class="featured-products" id="featured-products">
            <!-- Products -->
            @if (Model.Products != null && Model.Products.Any()) {
                @foreach (var product in Model.Products) {
                    <div class="product-card">
                        <h3 id="prod_name_@product.prod_id">@product.prod_name</h3>
                        <p id="prod_price">$@product.price</p>
                        <button class="modify-description-btn" data-product-id="@product.prod_id">Modify Product Description</button>
                        <button class="modify-price-btn" data-product-price-id="@product.prod_id">Modify Price</button>
                        <button class="delete-product-btn" data-delete-product-id="@product.prod_id">Delete Product</button>
                    </div>
                }
            }
            else
            {
                <p>No products available.</p>
            }
        </section>
        <br>
        <br>
        <button>Add Products to Store</button>
        <button>Add Stock to Warehouse</button>
        <br>
        <br>
    </main>
    <div id="updateProductDescriptionModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <form id="updateProductDescriptionForm" method="post" asp-page-handler="UpdateProductDescription">
                <input type="hidden" id="productDescriptionInput" name="productDescriptionInput"/>
                <label for="productName">Product Description:</label>
                <input type="text" id="productName" name="productName" placeholder="Ex: Wilson Indoor Basketball"/>
                <br>
                <button type="submit">Update Product</button>
            </form>
        </div>
    </div>
    <div id="updateProductPriceModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <form id="updateProductPriceForm" method="post" asp-page-handler="UpdateProductPrice">
                <input type="hidden" id="productPriceInput" name="productPriceInput"/>
                <label for="productPrice">New Price:</label>
                <input type="text" id="productPrice" name="productPrice" placeholder="Ex: 30.00"/>
                <br>
                <button type="submit">Update Price</button>
            </form>
        </div>
    </div>
</body>
<script>
    // Get the models, buttons, and a close button
    var updateProductDescriptionModal = document.getElementById("updateProductDescriptionModal");
    var updateProductPriceModal = document.getElementById("updateProductPriceModal");


    var modifyDescriptionButtons = document.getElementsByClassName("modify-description-btn");
    var modifyPriceButtons = document.getElementsByClassName("modify-price-btn");
    var deleteProductButtons = document.getElementsByClassName("delete-product-btn");

    var closeButtons = document.getElementsByClassName("close");

    // Add click event listeners to the buttons
    for (var i = 0; i < modifyDescriptionButtons.length; i++) {
        modifyDescriptionButtons[i].onclick = function() {
            var productId = this.getAttribute("data-product-id");
            modifyProductDescription(productId);
        };
    }

    for (var i = 0; i < modifyPriceButtons.length; i++) {
        modifyPriceButtons[i].onclick = function() {
            var productId = this.getAttribute("data-product-price-id");
            modifyProductPrice(productId);
        };
    }

    for (var i = 0; i < deleteProductButtons.length; i++) {
        deleteProductButtons[i].onclick = function() {
            var productId = this.getAttribute("data-delete-product-id");
            deleteProduct(productId);
        };
    }

    for (var i = 0; i < closeButtons.length; i++) {
        closeButtons[i].onclick = function() {
            updateProductDescriptionModal.style.display = "none";
            updateProductPriceModal.style.display = "none";
        };
    }

    // Define functions to perform actions on the product
    function modifyProductDescription(productId) {
        document.getElementById("productDescriptionInput").value = productId;
        updateProductDescriptionModal.style.display = "block";
    }

    function modifyProductPrice(productId) {
        document.getElementById("productPriceInput").value = productId;
        updateProductPriceModal.style.display = "block";
    }

    function deleteProduct(productId) {
        
    }
    window.onclick = function(event) {
        if (event.target == updateProductDescriptionModal) {
            updateProductDescriptionModal.style.display = "none";
        } else if (event.target == updateProductPriceModal) {
            updateProductPriceModal.style.display = "none";
        }
    }
</script>
</html>