@page
@model CartModel
@using Microsoft.AspNetCore.Http
@{
    ViewData["Title"] = "Cart";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Online Shopping Application</title>
    <link rel="stylesheet" href="styles.css">
    <script>
        function placeOrder(orderNo) {
            // Update status to "Order Received"
            var statusElement = document.getElementById("status_" + orderNo);
            statusElement.innerText = "Order Received";

            // Timestamp ship date and delivery date to now
            var now = new Date();
            var shipDateElement = document.getElementById("ship_date_" + orderNo);
            shipDateElement.innerText = now.toLocaleString();

            var deliveryDateElement = document.getElementById("delivery_date_" + orderNo);
            deliveryDateElement.innerText = now.toLocaleString();

            // Display order placed message
            alert("Order No: " + orderNo + " has been placed.");
        }

        function placeOrders(orderIds) {
            for (var i = 0; i < orderIds.length; i++) {
                placeOrder(orderIds[i]);
            }
        }
        
        function placeAllOrders() {
            var orderIds = [];
            @foreach (var order in Model.Orders)
            {
                @: orderIds.push('@order.order_id');
            }
            placeOrders(orderIds);
        }
    </script>
</head>
<body>
    <header>
        <h1>Welcome to Our Online Store</h1>
    </header>

    <main>
        <br>
        <section class="orders" id="orders">
            <h2>Current Cart/Orders</h2>
            <br>
            <br>
            @foreach (var order in Model.Orders)
            {
                <div class="orders-list">
                    <h3>Order No: @order.order_id</h3>
                    <p>Product: @GetProductName(order.prod_id)</p>
                    <p>Quantity: @order.quantity</p>
                    <p>Status: <span id="status_@order.order_id">@order.status</span></p>
                    <p>Delivery Type: @order.delivery_type</p>
                    <p>Delivery Price: @order.delivery_price</p>
                    <p>Ship Date: <span id="ship_date_@order.order_id">@order.ship_date</span></p>
                    <p>Delivery Date: <span id="delivery_date_@order.order_id">@order.delivery_date</span></p>
                </div>
                <button class="delete-order-btn" data-delete-order-id="@order.order_id">Delete Order</button>
                <br>
                <br>
            }
            <button onclick="placeAllOrders()">Place Orders</button>
        </section>
        <label for="paymentMethod"><b><u>Choose Payment Method:</u></b></label>
        <select name="paymentMethod" id="paymentMethod">
            @foreach (var creditCard in Model.CreditCards)
            {
                <option>@creditCard.CardNumber</option>
            }
            
        </select>
        <br>
        @{
            decimal totalCost = Model.Orders.Sum(order => order.delivery_price);
            HttpContext.Session.SetString("TotalCost", totalCost.ToString());
        }
        <h3><b>Total Cost of Cart: $@totalCost</b></h3>

    </main>
    <div id="deleteOrderModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <form method="post" asp-page-handler="DeleteOrder">
                <input type="hidden" id="orderId" name="orderId"/>
                <button type="submit">Delete Order</button>
            </form>
        </div>
    </div>

    @functions {
        string GetProductName(decimal productId)
        {
            // Retrieve product name based on product ID
            var product = Model.Products.FirstOrDefault(p => p.prod_id == productId);
            return product != null ? product.prod_name : "Unknown Product";
        }
    }
</body>
<script>

    var deleteOrderModal = document.getElementById("deleteOrderModal")
    var deleteOrderButtons = document.getElementsByClassName("delete-order-btn");

    function deleteOrder(orderId) {
        document.getElementById("orderId").value = orderId;
        deleteOrderModal.style.display = "block";
    }

    for (var i = 0; i < deleteOrderButtons.length; i++) {
        deleteOrderButtons[i].onclick = function() {
            var orderId = this.getAttribute("data-delete-order-id");
            deleteOrder(orderId);
        };
    }
</script>
</html>
